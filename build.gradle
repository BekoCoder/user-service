plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'uz.pdp'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Jackson (Jackson annotations already included in spring-boot-starter-web)
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.0' // Yangi versiya

    // JWT for Security
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // jackson integratsiyasi uchun

    // SpringDoc OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'

    // Swagger Annotations
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.16'

    // ModelMapper for DTO mapping
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'com.fasterxml:classmate:1.5.1' // ModelMapper uchun zarur

    // QR Code generation (ZXing)
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'com.google.zxing:javase:3.4.1'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // JUnit Platform Launcher (if needed for testing)
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Servlet API (only needed if required explicitly, otherwise Spring Boot handles it)
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'
}

tasks.named('test') {
    useJUnitPlatform()
}
